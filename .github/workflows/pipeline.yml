name: pipeline
on:
  push:
    branches:
      - pipeline

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Instalar dependências
        run: npm install

      - name: Construir e testar aplicação Node.js
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Instalar dependências
        run: npm install
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: felipenatividade/fastfood-service:latest

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: $({ steps.login-ecr.outputs.registry }}
          ECR REPOSITORY: fastfood-service
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE TAG
